<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>캘린더 페이지</title>
    <style>
      /*font 설정*/
      @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100..900&display=swap');

      @font-face {
        font-family: 'yg-jalnan';
        src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_four@1.2/JalnanOTF00.woff')
          format('woff');
        font-weight: normal;
        font-style: normal;
      }

      body {
        font-family: 'noto-sans', Arial, Helvetica, sans-serif;
        display: flex;
        flex-direction: column;
        align-items: center;
        margin: 0;
        background-color: #f9f9f9;
      }

      .calendar {
        width: 900px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        padding: 30px;
        margin-top: 50px;
      }

      .header {
        text-align: center;
        margin-bottom: 30px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 20px;
        background-color: #c8b6ff;
        color: white;
      }

      .calendar-header h2 {
        margin: 0;
        font-size: 36px;
        font-weight: bold;
      }

      .days,
      .dates {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        text-align: center;
        gap: 15px;
      }

      .day {
        font-weight: bold;
        font-size: 18px;
        color: #555;
      }

      .day:nth-child(1),
      .date:nth-child(7n + 1) {
        color: red;
      }

      .day:nth-child(7),
      .date:nth-child(7n) {
        color: blue;
      }

      .date {
        padding: 20px;
        font-size: 18px;
        border-radius: 50%;
        cursor: pointer;
        transition: background-color 0.3s;
        position: relative;
      }

      .date:hover {
        background-color: #f0f0f0;
      }

      .today {
        background-color: black;
        color: white;
      }

      .todo-list {
        margin-top: 20px;
        padding: 20px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        width: 900px;
      }

      .todo-list h3 {
        margin: 0;
        margin-bottom: 15px;
        font-size: 24px;
      }

      .todo-list ul {
        list-style: none;
        padding: 0;
        margin: 0;
      }

      .todo-list ul li {
        background: #f0f0f0;
        margin: 8px 0;
        padding: 12px;
        font-size: 18px;
        border-radius: 5px;
      }
    </style>
  </head>
  <body>
    <div class="calendar">
      <div class="header">
        <button id="prevMonth">&lt;</button>
        <h2 id="monthYear"></h2>
        <button id="nextMonth">&gt;</button>
      </div>
      <div class="days">
        <div>일</div>
        <div>월</div>
        <div>화</div>
        <div>수</div>
        <div>목</div>
        <div>금</div>
        <div>토</div>
      </div>
      <div class="dates" id="dates"></div>
    </div>

    <div class="todo-list">
      <h2>스케줄:</h2>
      <h3 id="selected-date"></h3>
      <ul id="todo-items"></ul>
    </div>

    <script>
      const monthYear = document.getElementById('monthYear');
      const datesContainer = document.getElementById('dates');
      const prevMonth = document.getElementById('prevMonth');
      const nextMonth = document.getElementById('nextMonth');

      let currentDate = new Date();

      // 날짜에 투두리스트 데이터를 API에서 가져오기
      async function fetchTodoData(dateKey) {
        // try {
        //   const response = await fetch(`/todo/api/calendar?date=${dateKey}`);
        //   if (!response.ok) {
        //     throw new Error('Failed to fetch todo data');
        //   }
        //   const data = await response.json();
        //   return data.todoItems || [];
        // } catch (error) {
        //   console.error(error);
        //   return [];
        // }

        // 투두리스트 DB 예시
        const mockApiResponse = {
          '2024-12-10': ['회의 준비', '서류 정리'],
          '2024-12-11': ['프로젝트 발표 준비', '코드 리뷰'],
          '2024-12-15': ['팀 회의', '미팅'],
          '2024-12-21': ['발표'],
        };
        return mockApiResponse[dateKey] || [];
      }

      // 달력 렌더링
      async function renderCalendar() {
        const year = currentDate.getFullYear();
        const month = currentDate.getMonth();

        monthYear.textContent = `${currentDate.toLocaleString('default', {
          month: 'long',
        })} ${year}`;

        const firstDay = new Date(year, month, 1).getDay();
        const lastDate = new Date(year, month + 1, 0).getDate();

        datesContainer.innerHTML = '';

        for (let i = 0; i < firstDay; i++) {
          const emptyDiv = document.createElement('div');
          datesContainer.appendChild(emptyDiv);
        }

        for (let i = 1; i <= lastDate; i++) {
          const dateDiv = document.createElement('div');
          dateDiv.classList.add('date');
          dateDiv.textContent = i;
          dateDiv.addEventListener('click', () =>
            selectDate(year, month + 1, i),
          );
          const dateKey = `${year}-${month + 1}-${i}`;
          const items = await fetchTodoData(dateKey); // 날짜의 투두리스트 데이터 가져오기

          // 투두리스트가 있으면 날짜 색 변경
          if (items.length > 0) {
            dateDiv.style.backgroundColor = '#e7c6ff';
          }
          datesContainer.appendChild(dateDiv);
        }
      }

      prevMonth.addEventListener('click', () => {
        currentDate.setMonth(currentDate.getMonth() - 1);
        renderCalendar();
      });

      nextMonth.addEventListener('click', () => {
        currentDate.setMonth(currentDate.getMonth() + 1);
        renderCalendar();
      });

      // 날짜 클릭 시 해당 날짜의 투두리스트 보여주기
      async function selectDate(year, month, day) {
        const selectedDate = `${year}년 ${month}월 ${day}일`;
        document.getElementById('selected-date').textContent = selectedDate;

        const todoItems = document.getElementById('todo-items');
        todoItems.innerHTML = '';

        const dateKey = `${year}-${month}-${day}`;
        const items = await fetchTodoData(dateKey); // 선택된 날짜의 투두리스트 가져오기

        const dateDivs = document.querySelectorAll('.date');
        dateDivs.forEach((dateDiv) => {
          const dateText = dateDiv.textContent;
          if (parseInt(dateText) === day) {
            if (items.length > 0) {
              dateDiv.style.backgroundColor = '#e7c6ff';
            } else {
              dateDiv.style.backgroundColor = ''; // 투두가 없으면 원래 색상으로 되돌리기
            }
          }
        });

        items.forEach((item) => {
          const li = document.createElement('li');
          li.textContent = item;
          todoItems.appendChild(li);
        });
      }

      renderCalendar();
    </script>
  </body>
</html>

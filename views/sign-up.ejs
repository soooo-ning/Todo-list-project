<!DOCTYPE html>
<html lang="ko">
  <%- include('include/header', { title: 'signup' })%>
  <body>
    <div class="main_wrap">
      <div class="main_img">
        <h1 class="main_title">Todo Checkkdfgdfg</h1>
        <p class="main_txt">
          Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nobis
          quaerat quas, ipsum minus minima odit, necessitatibus fuga quisquam
          doloremque quibusdam explicabo, suscipit magni sed! Itaque distinctio
          nobis eveniet recusandae ab.
        </p>
      </div>
      <div class="main_con">
        <h3 class="sub_title">
          <span>회원가입</span>
        </h3>
        <form name="form-signup" method="post">
          <label>
            <span>NICK NAME</span>
            <input
              type="text"
              placeholder="닉네임을 입력하세요"
              name="userName"
              required
            />
          </label>
          <label>
            <span>EMAIL</span>
            <input
              type="email"
              placeholder="이메일을 입력하세요"
              name="userEmail"
              required
            />
          </label>
          <label>
            <span>PW</span>
            <input
              type="password"
              placeholder="4글자에서 18글자 사이"
              name="userPw"
              required
              minlength="4"
              maxlength="18"
            />
          </label>

          <button type="button" onclick="handleSubmit()">회원가입</button>
        </form>

        <div class="link">
          <a href="/auth/search-pw">아이디 / 비밀번호 찾기</a>
          <a href="/">로그인</a>
        </div>
      </div>
    </div>
    <script>
      // 회원가입 처리 함수
      async function handleSubmit() {
        event.preventDefault(); // 기본 form 제출 동작 방지

        // 유효성 검사
        const form = document.forms['form-signup'];
        const userName = form['userName'].value.trim();
        const userEmail = form['userEmail'].value.trim();
        const userPw = form['userPw'].value.trim();

        // 1. 유효성 검사
        if (!userName || !userEmail || !userPw) {
          alert('모든 필드를 입력해주세요.');
          return;
        }

        if (userName.length > 10) {
          alert('닉네임은 10글자 이내로 입력해주세요.');
          return;
        }

        if (userPw.length < 4 || userPw.length > 18) {
          alert('비밀번호는 4글자에서 18글자 사이로 입력해주세요.');
          return;
        }

        // 이메일 중복 확인
        axios
          .get(`/auth/api/sign-up/check?email=${userEmail}`)
          .then((emailCheckResponse) => {
            const emailCheckData = emailCheckResponse.data;
            console.log(emailCheckData.message);

            // 이메일 중복 시 처리
            if (emailCheckData.success === false) {
              alert('이미 사용 중인 이메일입니다.');
              return;
            }

            // 이메일 중복이 없다면 회원가입 요청
            axios
              .post('/auth/api/sign-up', {
                nickname: userName, // 'userName' -> 'nickname'으로 변경
                email: userEmail, // 'userEmail' -> 'email'으로 변경
                pw: userPw, // 'userPw' -> 'pw'로 변경
              })
              .then((signUpResponse) => {
                const signUpData = signUpResponse.data;
                if (signUpResponse.status === 201) {
                  alert('회원가입 성공!');
                  window.location.href = '/dashboard';
                } else {
                  alert(
                    signUpData.message || '회원가입 중 문제가 발생했습니다.',
                  );
                }
              })
              .catch((err) => {
                console.error('회원가입 오류 발생:', err);
                alert('회원가입 중 문제가 발생했습니다!');
              });
          })
          .catch((err) => {
            console.error('이메일 중복 확인 오류 발생:', err);
            alert('이메일 중복 확인 중 문제가 발생했습니다!');
          });
      }
    </script>
  </body>
</html>

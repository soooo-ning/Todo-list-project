<!DOCTYPE html>
<html lang="en">
  <%- include('include/header', { title: 'deleted' })%>
  <body>
    <!-- 네비게이션 부분 -->
    <nav class="nav"><%- include('include/navi') %></nav>

    <main class="container deleted_wrap">
      <div class="content">
        <h3 class="sub_title"><span>휴지통</span></h3>
        <div class="card-container add">
          <div class="card" id="sampleCard">
            <button
              type="button"
              id="restoreSelectedButton"
              class="multiple-button"
            >
              선택 복구
            </button>
            <div class="card-title"></div>
            <ul class="todo-list">
              <li>
                <input type="checkbox" class="select-checkbox" />
                <span class="todo-item"></span>
              </li>
            </ul>
            <form>
              <input type="hidden" name="id" value="" />
              <button type="button" class="recover-button">복구</button>
            </form>
          </div>
        </div>
      </div>
    </main>

    <%- include('include/popup') %>

    <script>
      // 데이터를 추가
      function renderData(data) {
        const container = document.querySelector('.card-container');
        const sampleCard = document.getElementById('sampleCard');

        sampleCard.style.display = 'none';

        data.forEach((item) => {
          const card = sampleCard.cloneNode(true);
          card.style.display = 'block';

          // 제목
          const title = card.querySelector('.card-title');
          title.textContent = item.title;

          // 체크박스
          const checkbox = card.querySelector('.select-checkbox');
          checkbox.value = item.id;

          // 투두리스트
          const todoList = card.querySelector('.todo-list');
          todoList.innerHTML = '';
          item.todos.forEach((todo) => {
            const todoItem = document.createElement('li');
            todoItem.innerHTML = `
              <input type="checkbox" class="select-checkbox" value="${todo.id}" />
              <span>${todo.task}</span>
            `;
            if (todo.completed) {
              todoItem.classList.add('completed');
            }
            todoList.appendChild(todoItem);
          });

          //복구
          const restoreButton = card.querySelector('.recover-button');
          restoreButton.onclick = async function () {
            const confirmRestore = confirm(
              `${item.title}을(를) 복구하시겠습니까?`,
            );
            if (confirmRestore) {
              try {
                const response = await fetch('/todo/api/restore', {
                  method: 'PATCH',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({ id: item.id }),
                });
                if (response.ok) {
                  alert(`${item.title}이(가) 복구되었습니다!`);
                  card.remove();
                } else {
                  alert('복구에 실패했습니다.');
                }
              } catch (error) {
                console.error(error);
                alert('복구 중 오류가 발생했습니다.');
              }
            }
          };

          container.appendChild(card);
        });
      }

      // 선택 복구
      document
        .getElementById('restoreSelectedButton')
        .addEventListener('click', async () => {
          const selectedCheckboxes = document.querySelectorAll(
            '.select-checkbox:checked',
          );
          const selectedIds = Array.from(selectedCheckboxes).map(
            (checkbox) => checkbox.value,
          );

          if (selectedIds.length === 0) {
            alert('선택된 항목이 없습니다.');
            return;
          }

          const confirmRestore = confirm('선택된 항목들을 복구하시겠습니까?');
          if (confirmRestore) {
            try {
              const response = await fetch('/todo/api/restore/multiple', {
                method: 'PATCH',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ ids: selectedIds }),
              });
              if (response.ok) {
                alert('선택된 항목들이 복구되었습니다!');
                selectedCheckboxes.forEach((checkbox) =>
                  checkbox.closest('.card').remove(),
                );
              } else {
                alert('선택 복구에 실패했습니다.');
              }
            } catch (error) {
              console.error(error);
              alert('선택 복구 중 오류가 발생했습니다.');
            }
          }
        });
    </script>
  </body>
</html>

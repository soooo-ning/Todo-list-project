<!DOCTYPE html>
<html lang="en">
  <%- include('include/header', { title: 'search-pw' })%>
  <body>
    <div class="main_wrap">
      <div class="main_img">
        <a href="/" class="main_title">Todo Checkk</a>
      </div>
      <div class="main_con">
        <h3 class="sub_title">
          <span>Find</span>
        </h3>
        <form name="form-find" method="post">
          <label>
            <span>EMAIL</span>
            <input
              type="email"
              placeholder="가입시 입력했던 이메일을 입력하세요"
              name="userEmail"
              required
            />
          </label>

          <button type="submit">임시 비밀번호 발급</button>
        </form>
      </div>
    </div>
    <script>
      // 각 인풋 필드를 배열로 저장
      const inputs = document.querySelectorAll('input');

      // 'Enter' 키가 눌렸을 때 포커스를 다음 인풋으로 이동시키는 함수
      inputs.forEach((input, index) => {
        input.addEventListener('keydown', function (event) {
          if (event.key === 'Enter') {
            event.preventDefault(); // Enter 키의 기본 동작(폼 제출)을 막음
            if (inputs[index + 1]) {
              inputs[index + 1].focus(); // 다음 인풋으로 포커스를 이동
            }
          }
        });
      });

      // 폼 제출 이벤트 처리
      document.forms['form-find'].addEventListener('submit', function (event) {
        event.preventDefault();

        const email = document.querySelector('[name="userEmail"]').value.trim();

        // 이메일이 빈 값인지 확인
        if (!email) {
          alert('이메일을 입력해주세요.');
          return;
        }

        // 서버로 비밀번호 재설정 요청
        axios
          .get(`/auth/api/search-pw?email=${encodeURIComponent(email)}`) // GET 요청으로 변경
          .then((response) => {
            // 서버에서 받은 성공 메시지 대신 임시 비밀번호를 alert로 띄우기
            if (response.data.success) {
              alert(`임시 비밀번호: ${response.data.tempPassword}`); // 임시 비밀번호 alert
              window.location.href = '/'; // 로그인 페이지로 리디렉션 (원하는 경우)
            }
          })
          .catch((error) => {
            console.error(error); // 오류 상세 출력

            if (error.response) {
              // 서버에서 반환한 에러 응답 처리
              if (error.response.data && error.response.data.message) {
                alert(error.response.data.message); // 서버에서 보낸 오류 메시지 출력
              } else {
                alert('서버 오류가 발생했습니다. 다시 시도해주세요.');
              }
            } else if (error.request) {
              // 요청은 했지만 서버에서 응답을 받지 못한 경우
              alert('서버에 응답이 없습니다. 다시 시도해주세요.');
            } else {
              // 기타 오류 처리
              alert('알 수 없는 오류가 발생했습니다.');
            }
          });
      });
    </script>
  </body>
</html>

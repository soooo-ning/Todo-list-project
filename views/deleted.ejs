<!DOCTYPE html>
<html lang="en">
  <%- include('include/header', { title: 'deleted' }) %>
  <body>
    <!-- 네비게이션 부분 -->
    <nav class="nav"><%- include('include/navi') %></nav>

    <main class="container deleted_wrap">
      <div class="content">
        <h3 class="sub_title"><span>휴지통</span></h3>
        <div class="card-container add">
          <% if (todos && todos.length > 0) { %>
          <div class="btn_wrap">
            <button
              type="button"
              id="restoreSelectedButton"
              class="multiple-button"
            >
              선택 복구
            </button>
          </div>

          <% todos.forEach(function(todo) { %>
          <div class="card">
            <div class="card-header">
              <input
                type="checkbox"
                class="select-checkbox"
                value="<%= todo.id %>"
              />
              <div
                class="card-title"
                onclick="handleTodoClick('<%= todo.id %>')"
              >
                <%= todo.title %> <% if (todo.deleted_at) { %>
                <span class="delete-date">
                  삭제일: <%= new Date(todo.deleted_at).toLocaleDateString() %>
                </span>
                <% } %>
              </div>
            </div>

            <% if (todo.todo_contents && todo.todo_contents.length > 0) { %>
            <ul class="todo-list-all">
              <% todo.todo_contents.forEach(function(content) { %>
              <li class="<%= content.state ? 'completed' : '' %>">
                <%= content.content %>
              </li>
              <% }); %>
            </ul>
            <% } %>

            <div class="card-actions">
              <button
                type="button"
                class="recover-button"
                data-id="<%= todo.id %>"
                data-title="<%= todo.title %>"
              >
                복구
              </button>
            </div>
          </div>
          <% }); %> <% } else { %>
          <div class="no-items">휴지통이 비어있습니다.</div>
          <% } %>
        </div>
      </div>
    </main>

    <%- include('include/write-popup') %> <%- include('include/detail-popup') %>
    <script>
      // escapeHtml 함수 정의
      function escapeHtml(string) {
        if (!string) return '';
        return string
          .replace(/&/g, '&amp;')
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;')
          .replace(/"/g, '&quot;')
          .replace(/'/g, '&#039;');
      }
    </script>
    <script>
      // 팝업 함수
      window.handleTodoClick = async function (todoId) {
        if (!todoId) {
          console.error('Todo ID is required');
          return;
        }

        try {
          const response = await axios.get(`/todo/api/get/${todoId}`);
          const todo = response.data.data;

          const detailPopup = document.querySelector('.detail-popup');
          const detailForm = document.forms['form-todo-detail'];

          detailForm.elements['todoTitle'].value = todo.title || '';
          detailForm.elements['todoDate'].value = todo.date || '';
          detailForm.elements['priority'].value = todo.priority || '';

          detailPopup.classList.add('on');
          document.body.classList.add('pop_open');
        } catch (error) {
          console.error('Failed to load todo details:', error);
        }
      };

      document.addEventListener('DOMContentLoaded', () => {
        // 복구 버튼
        document.querySelectorAll('.recover-button').forEach((button) => {
          button.addEventListener('click', async function () {
            const id = this.dataset.id;
            const title = this.dataset.title;
            console.log('Restore clicked for:', id, title); // 디버깅용

            if (confirm(`'${title}'을(를) 복구하시겠습니까?`)) {
              try {
                const response = await fetch('/todo/api/restore', {
                  method: 'PATCH',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({ id }),
                });

                if (response.ok) {
                  alert('복구가 완료되었습니다.');
                  this.closest('.card').remove();
                } else {
                  throw new Error('복구 실패');
                }
              } catch (error) {
                console.error('복구 중 오류:', error);
                alert('복구 중 오류가 발생했습니다.');
              }
            }
          });
        });

        // 선택 복구 버튼 이벤트
        const restoreSelectedButton = document.getElementById(
          'restoreSelectedButton',
        );
        if (restoreSelectedButton) {
          restoreSelectedButton.addEventListener('click', async () => {
            const selectedCheckboxes = document.querySelectorAll(
              '.select-checkbox:checked',
            );
            console.log('Selected items:', selectedCheckboxes.length); // 디버깅용

            const selectedIds = Array.from(selectedCheckboxes).map(
              (cb) => cb.value,
            );

            if (selectedIds.length === 0) {
              alert('복구할 항목을 선택해주세요.');
              return;
            }

            if (confirm('선택한 항목들을 복구하시겠습니까?')) {
              try {
                const response = await fetch('/todo/api/restore/multiple', {
                  method: 'PATCH',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({ ids: selectedIds }),
                });

                if (response.ok) {
                  alert('선택한 항목들이 복구되었습니다.');
                  selectedCheckboxes.forEach((cb) =>
                    cb.closest('.card').remove(),
                  );
                } else {
                  throw new Error('선택 복구 실패');
                }
              } catch (error) {
                console.error('복구 중 오류:', error);
                alert('복구 중 오류가 발생했습니다.');
              }
            }
          });
        }
      });
    </script>
  </body>
</html>
